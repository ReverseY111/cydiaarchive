#!/bin/sh

## Hackulous Security Installer/Updater   ##
## Written by Kyek for http://hackulo.us  ##
## April 14, 2009                         ##
## Version 1.2.0                          ##
## Last update: January 14, 2010          ##

PEMFILE="/usr/lib/hackulous/.hackulous.security.pubkey.pem"
SBLOCKS="/usr/lib/hackulous/shosts.data"
SSIGN="/usr/lib/hackulous/shosts.sign"
WORKDIR="/tmp/hsecure-$(date +%Y%m%d-%H%M%S)"

function assertHosts() {
	if [ ! -e /etc/hosts ]; then
		echo "## CREATED BY HACKULOUS SECURITY  ##" > /etc/hosts
		echo "## WRITTEN BY KYEK                ##" >> /etc/hosts
		echo "## MORE INFO: http://hackulo.us   ##" >> /etc/hosts
		echo "" >> /etc/hosts
		echo "127.0.0.1	localhost" >> /etc/hosts
		echo "255.255.255.255 broadcasthost" >> /etc/hosts
		echo "::1 localhost" >> /etc/hosts
		echo "fe80::1%lo0 localhost" >> /etc/hosts
		echo "0"
	else
		echo "1"
	fi
}

function assertOriginal() {
	if [ ! -e /etc/hosts.original ]; then
		cp /etc/hosts /etc/hosts.original
		echo "0"
	else
		echo "1"
	fi
}

function assertKey() {
	if [ ! -e "$PEMFILE" ]; then
		echo "0"
	else
		echo "1"
	fi
}

function assertStatic() {
	if [ ! -e "$SBLOCKS" ]; then
		echo "0"
	elif [ ! -e "$SSIGN" ]; then
		echo "-1"
	else
		echo "1"
	fi
}

function wipeChanges() {
	cat /etc/hosts | sed '/^## ADDED BY HACKULOUS SECURITY ##$/,/^## END HACKULOUS SECURITY ##$/d' | sed '/^[^#]*hackulo\.us/d' | sed '/^[^#]*appulo\.us/d' | sed '/^[^#]*appulous.us/d' > /etc/hosts.unsecure
	cp /etc/hosts.unsecure /etc/hosts
}

function instMinimal() {
	echo "## ADDED BY HACKULOUS SECURITY ##" >> /etc/hosts
	echo "127.0.0.1 cydia.hackulous.org" >> /etc/hosts
	echo "127.0.0.1 cydia.haklab.com" >> /etc/hosts
	echo "127.0.0.1 cydia.themonkeysball.com" >> /etc/hosts
	echo "127.0.0.1 cydia.crackulous.net" >> /etc/hosts
	echo "127.0.0.1 cydia.installous.com" >> /etc/hosts
	echo "127.0.0.1 cydia.appulous.org" >> /etc/hosts
	echo "## END HACKULOUS SECURITY ##" >> /etc/hosts
}

function verifyStaticSignature() {
	VERIFY=`openssl dgst -sha1 -verify $PEMFILE -signature $SSIGN $SBLOCKS`
	if [ "$VERIFY" != "Verified OK" ]; then
		echo "0"
	else
		echo "1"
	fi
}

function instStatic() {
	echo "## ADDED BY HACKULOUS SECURITY ##" >> /etc/hosts
	cat $SBLOCKS >> /etc/hosts
	echo "## END HACKULOUS SECURITY ##" >> /etc/hosts
}

function verifyKeyOnline() {
	ERROR=1
	curl -f -s -o "${WORKDIR}/hsecure_pub.pem" "http://hackulo.us/security/keys/hsecure_pub.pem" && ERROR=0
	if [ $ERROR -eq 1 -o ! -e "${WORKDIR}/hsecure_pub.pem" ]; then
		echo "-1"
	else
		PUBKEY=`cat $PEMFILE`
		VKEY=`cat ${WORKDIR}/hsecure_pub.pem`
		if [ "$PUBKEY" != "$VKEY" ]; then
			echo "0"
		else
			echo "1"
		fi
	fi
}

function getOnlineSecurityData() {
	ERROR=1
	curl -f -s -o "${WORKDIR}/hosts.tmp" "http://hackulo.us/security/?hosts" && ERROR=0
	if [ $ERROR -eq 1 -o ! -e "${WORKDIR}/hosts.tmp" ]; then
		echo "0"
	else
		cat ${WORKDIR}/hosts.tmp | sed -n '/<!--BEGIN SIGNED DATA-->/,/<!--END SIGNED DATA-->/p' | sed '/<!--/d' > ${WORKDIR}/hosts.data
		cat ${WORKDIR}/hosts.tmp | sed -n '/<!--BEGIN SIGNATURE-->/,/<!--END SIGNATURE-->/p' | sed '/<!--/d' > ${WORKDIR}/hosts.sign
		CHECKDATA=`cat ${WORKDIR}/hosts.data`
		if [ -z "$CHECKDATA" ]; then
			echo "-1"
		else
			CHECKSIGN=`cat ${WORKDIR}/hosts.sign`
			if [ -z "$CHECKSIGN" ]; then
				echo "-2"
			else
				echo "1"
			fi
		fi
	fi
}

function verifyOnlineSignature() {
	VERIFY=`openssl dgst -sha1 -verify $PEMFILE -signature ${WORKDIR}/hosts.sign ${WORKDIR}/hosts.data`
	if [ "$VERIFY" != "Verified OK" ]; then
		echo "0"
	else
		echo "1"
	fi
}

function instOnline() {
	echo "## ADDED BY HACKULOUS SECURITY ##" >> /etc/hosts
	cat ${WORKDIR}/hosts.data >> /etc/hosts
	echo "## END HACKULOUS SECURITY ##" >> /etc/hosts
}

function instMinimalExit() {
	echo "Executing minimal install..."
	instMinimal
	echo "Installed."
	echo "Cleaning up..."
	rm -rf $WORKDIR
	echo "Done."
	exit 0
}

function instStaticExit() {
	echo "Attempting static installation."
	RESULT=`assertStatic`
	if [ $RESULT == "-1" ]; then
		echo "ERROR: Signature file not found"
	elif [ $RESULT == "0" ]; then
		echo "ERROR: Static blocks not found"
	else
		echo "Verifying signature..."
		RESULT=`verifyStaticSignature`
		if [ $RESULT == "0" ]; then
			echo "ERROR: Invalid signature"
		else
			echo "Installing static blocks..."
			instStatic
			echo "Installed."
			echo "Cleaning up..."
			rm -rf $WORKDIR
			echo "Done."
			exit 0
		fi
	fi	
	instMinimalExit
}

echo "Creating a working directory..."
if [ -e "$WORKDIR" ]; then
	rm -rf "$WORKDIR"
fi
mkdir -p "$WORKDIR"

echo "Checking for hosts file..."
RESULT=`assertHosts`
if [ $RESULT == "0" ]; then
	echo "No hosts file found. Created a new one."
fi

echo "Checking for original backup..."
RESULT=`assertOriginal`
if [ $RESULT == "0" ]; then
	echo "No backup found. Created."
fi

echo "Cleaning hosts file..."
wipeChanges

echo "Checking for local key..."
RESULT=`assertKey`
if [ $RESULT == "0" ]; then
	echo "ERROR: No local key found."
	instMinimalExit
fi

echo "Verifying local key..."
RESULT=`verifyKeyOnline`
if [ $RESULT == "-1" ]; then
	echo "ERROR: Could not contact key server."
	instMinimalExit
elif [ $RESULT == "0" ]; then
	echo "ERROR: Local key does not match."
	instMinimalExit
fi

echo "Downloading security updates..."
RESULT=`getOnlineSecurityData`
if [ $RESULT == "0" ]; then
	echo "ERROR: Could not download updates."
	instStaticExit
elif [ $RESULT == "-1" ]; then
	echo "ERROR: Blank security data"
	instStaticExit
elif [ $RESULT == "-2" ]; then
	echo "ERROR: Blank signature"
	instStaticExit
fi

echo "Verifying signature..."
RESULT=`verifyOnlineSignature`
if [ $RESULT == "0" ]; then
	echo "ERROR: Invalid signature"
	instStaticExit
fi

echo "Installing secure updates..."
instOnline
echo "Installed."
echo "Cleaning up..."
rm -rf $WORKDIR
echo "Done."
exit 0
